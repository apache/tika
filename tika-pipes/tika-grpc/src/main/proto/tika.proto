// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
package tika;

import "google/protobuf/any.proto";

option java_multiple_files = true;
option java_package = "org.apache.tika";
option java_outer_classname = "TikaProto";
option objc_class_prefix = "HLW";


service Tika   {
  rpc SaveFetcher(SaveFetcherRequest) returns (SaveFetcherReply) {}
  rpc GetFetcher(GetFetcherRequest) returns (GetFetcherReply) {}
  rpc ListFetchers(ListFetchersRequest) returns (ListFetchersReply) {}
  rpc DeleteFetcher(DeleteFetcherRequest) returns (DeleteFetcherReply) {}
  rpc FetchAndParse(FetchAndParseRequest) returns (FetchAndParseReply) {}
  rpc FetchAndParseServerSideStreaming(FetchAndParseRequest)
    returns (stream FetchAndParseReply) {}
  rpc FetchAndParseBiDirectionalStreaming(stream FetchAndParseRequest) 
    returns (stream FetchAndParseReply) {}
}

message SaveFetcherRequest {
  string fetcher_id = 1;
  string fetcher_class = 2;
  string fetcher_config_json = 3;
}

message SaveFetcherReply {
  string fetcher_id = 1;
}

message FetchAndParseRequest {
  string fetcher_id = 1;
  string fetch_key = 2;
  string metadata_json = 3;
}

message FetchAndParseReply {
  string fetch_key = 1;
  map<string, string> fields = 2;
  string status = 3;
  string error_message = 4;
}

message DeleteFetcherRequest {
  string fetcher_id = 1;
}

message DeleteFetcherReply {
  bool success = 1;
}

message GetFetcherRequest {
  string fetcher_id = 1;
}

message GetFetcherReply {
  string fetcher_id = 1;
  string fetcher_class = 2;
  map<string, string> params = 3;
}

message ListFetchersRequest {
  int32 page_number = 1;
  int32 num_fetchers_per_page = 2;
}

message ListFetchersReply {
  repeated GetFetcherReply get_fetcher_replies = 1;
}
